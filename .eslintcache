[{"D:\\React_Programs\\weatherxapx\\src\\index.js":"1","D:\\React_Programs\\weatherxapx\\src\\App.js":"2","D:\\React_Programs\\weatherxapx\\src\\reportWebVitals.js":"3","D:\\React_Programs\\weatherxapx\\src\\store.js":"4","D:\\React_Programs\\weatherxapx\\src\\Weather.js":"5","D:\\React_Programs\\weatherxapx\\src\\Dashboard.js":"6","D:\\React_Programs\\weatherxapx\\src\\actions\\fetchWeather.js":"7","D:\\React_Programs\\weatherxapx\\src\\reducers\\weatherReducer.js":"8","D:\\React_Programs\\weatherxapx\\src\\actions\\types.js":"9"},{"size":614,"mtime":1612241184000,"results":"10","hashOfConfig":"11"},{"size":206,"mtime":1612270075693,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1612241184000,"results":"13","hashOfConfig":"11"},{"size":293,"mtime":1612241184000,"results":"14","hashOfConfig":"11"},{"size":2362,"mtime":1612273577862,"results":"15","hashOfConfig":"11"},{"size":1660,"mtime":1612270735376,"results":"16","hashOfConfig":"11"},{"size":506,"mtime":1612241184000,"results":"17","hashOfConfig":"11"},{"size":439,"mtime":1612241184000,"results":"18","hashOfConfig":"11"},{"size":46,"mtime":1612241184000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"p39ff6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\React_Programs\\weatherxapx\\src\\index.js",[],["43","44"],"D:\\React_Programs\\weatherxapx\\src\\App.js",[],"D:\\React_Programs\\weatherxapx\\src\\reportWebVitals.js",[],"D:\\React_Programs\\weatherxapx\\src\\store.js",[],"D:\\React_Programs\\weatherxapx\\src\\Weather.js",["45"],"import React, { Component } from 'react'\nimport \"./card.css\"\n\nexport default class Weather extends Component {\n\n    render() {\n        let { weatherDetails } = this.props;\n        console.log(\"--\", this.props.weatherDetails)\n        return (\n            <div className='card-aligin'>\n                {weatherDetails && <div className=\"row\" style={{ marginTop: \"20px\", marginLeft: \"40%\" }}>\n                    <div className=\"card\" style={{ width: \"16rem\", marginLeft: \"30px\", marginTop: \"15px\", color: \"black\" }}>\n                        <div className='card-header'>\n                            <h5 className=\"\" >\n                                Your entered location is :\n                        </h5>\n                            <span className='title-align'>\n                                <h3 className = 'city-title'>\n                                    {weatherDetails.name},\n                                    {weatherDetails.sys.country}\n                                </h3>\n\n                                <img style={{ marginLeft: '20%' }} src={`http://openweathermap.org/img/w/${weatherDetails.weather[0].icon}.png`} />\n                            </span>\n                        </div>\n\n                        <div className=\"card-body bgColor\" >\n\n                            <strong>{this.props.description}</strong>\n                            <ul className=\"list-group list-group-flush alignment\" >\n                                <li className=\"list-group-item\">Max-Temp : {weatherDetails.main.temp_max}</li>\n                                <li className=\"list-group-item\">Min-Temp : {weatherDetails.main.temp_min}</li>\n                                <li className=\"list-group-item\">Humidity : {weatherDetails.main.humidity}</li> \n                                <li className=\"list-group-item\">Wind : {weatherDetails.wind.speed}</li>\n                                <li className=\"list-group-item\">Pressure : {weatherDetails.main.pressure} hPa</li>\n                                 <li className=\"list-group-item\">Latitude : {weatherDetails.coord.lat}</li> \n                                <li className=\"list-group-item\">Longitude : {weatherDetails.coord.lon}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                }\n            </div>\n\n        );\n    }\n}","D:\\React_Programs\\weatherxapx\\src\\Dashboard.js",["46"],"import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { connect } from 'react-redux';\nimport './App.css'\n//action\nimport { fetchWeather } from \"./actions/fetchWeather\";\nimport Weather from './Weather'\n\nfunction Dashboard({ weatherDetails }) {\n\n  const [city, setCity] = useState(\"\");\n\n  const weatherSelector = useSelector((state) => state.WeatherInfo);\n  const dispatch = useDispatch();\n  const getWeatherInfo = (city) => { dispatch(fetchWeather(city)) };\n\n\n  const getWeatherData = (e) => {\n    e.preventDefault();\n    getWeatherInfo(city);\n    setCity('')\n\n\n  }\n  console.log(weatherDetails)\n  const data = weatherDetails;\n  return (\n    <React.Fragment>\n      <h is=\"x3d\">React Redux WeatherApp (Powered by Hooks)</h>\n      <div className=\"App\" style={{ backgroundColor: \"#D3D3D3\", height: \"auto\" }}>\n\n        <form className=\"form-inline centerq\">\n          <div className=\"form-group mb-2 \">\n            <label htmlFor=\"cityName\">Enter City</label>\n            <input type=\"text\" className=\"form-control\" id=\"city\" aria-describedby=\"city\" name=\"city\" placeholder=\"Enter city\" onChange={e => setCity(e.target.value)} value={city} />\n            <Button type=\"button\" className=\"btn btn-primary\"  onClick={getWeatherData} >Search</Button>\n          </div>\n        </form>\n      </div>\n      <div>\n        {data.cod === 200 && <Weather weatherDetails={data} />}\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = state => ({\n  weatherDetails: state.weatherInfo,\n  \n});\nexport default connect(\n  mapStateToProps,\n  { fetchWeather }\n)(Dashboard);\n\n","D:\\React_Programs\\weatherxapx\\src\\actions\\fetchWeather.js",[],"D:\\React_Programs\\weatherxapx\\src\\reducers\\weatherReducer.js",["47"],"import {FETCH_WEATHER} from '../actions/types'\r\n\r\nconst initialState = {\r\n    weatherInfo:{}\r\n  };\r\n export default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case FETCH_WEATHER:\r\n        console.log({...state,\r\n            weatherInfo: payload},\"plplp\")\r\n      return {\r\n        ...state,\r\n        weatherInfo: payload\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\React_Programs\\weatherxapx\\src\\actions\\types.js",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":23,"column":33,"nodeType":"56","endLine":23,"endColumn":148},{"ruleId":"57","severity":1,"message":"58","line":14,"column":9,"nodeType":"59","messageId":"60","endLine":14,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":6,"column":2,"nodeType":"63","endLine":21,"endColumn":2},{"ruleId":"50","replacedBy":"64"},{"ruleId":"52","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'weatherSelector' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["66"],["67"],"no-global-assign","no-unsafe-negation"]